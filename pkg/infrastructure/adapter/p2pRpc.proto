syntax = "proto3";

package p2pRpc;

option go_package = "./p2pRpc";

message LogEntry {
    enum LogType {
        LogCommand = 0;
        LogQuery = 1;
        LogNoop = 2;
        LogConfiguration = 3;
    }
    uint64 index = 1;
    uint32 term = 2;
    bytes data = 3;
    LogType type = 4;
}

message AppendEntriesInput {
    uint32 term = 1;
    string leaderId = 2;
    uint32 prevLogIndex = 3;
    uint32 prevLogTerm = 4;
    repeated LogEntry entries = 5;
    uint32 leaderCommit = 6;
}

message AppendEntriesOutput {
    uint32 term = 1;
    bool success = 2;
}

message RequestVoteInput {
    uint32 term = 1;
    string candidateId = 2;
    uint32 lastLogIndex = 3;
    uint32 lastLogTerm = 4;
}

message RequestVoteOutput {
    uint32 term = 1;
    bool voteGranted = 2;
}

message InstallSnapshotInput {
    uint32 term = 1;
    string leaderId = 2;
    uint32 lastIncludedIndex = 3;
    uint32 lastIncludedTerm = 4;
    uint32 offset = 5;
    bytes data = 6;
}

message InstallSnapshotOutput {
    uint32 term = 1;
}

service Rpc {
    rpc AppendEntries(AppendEntriesInput) returns (AppendEntriesOutput) {}
    rpc RequestVote(RequestVoteInput) returns (RequestVoteOutput) {}
    rpc PreVote(RequestVoteInput) returns (RequestVoteOutput) {}
    rpc InstallSnapshot(InstallSnapshotInput) returns (InstallSnapshotOutput) {}
}
